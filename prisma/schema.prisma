// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  lastName String
  email String @unique
  password String
  role Role @default(CLIENT)
  cart Cart?
  createAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")


  @@map("user")
}

model Product {
  id Int @id @default(autoincrement())
  name String
  description String
  price Decimal
  isEnable Boolean @default(true) @map("is_enable")
  category Category? @relation(fields: [categoryId], references: [id],onDelete: SetNull,onUpdate: Cascade)
  categoryId Int? @map("category_id")
  images Image[]
  folderId String @map("folder_id")
  urlFolder String @map("url_folder")
  stock Int
  carts    ProductInCart[]
  createAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")

	@@map("product")
}

model Image {
  id Int @id @default(autoincrement())
  name String
  url String
  product Product? @relation(fields: [productId],references: [id],onDelete: SetNull,onUpdate: Cascade)
  productId Int? @map("product_id")
  createAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")


  @@map("product_image")
}

model Category {
  id Int @id @default(autoincrement())
  name String
  description String
  products Product[]
  createAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")

  @@map("category")
}


model Cart  {
  id Int @id @default(autoincrement())
  user        User  @relation(fields: [userId],references: [id])
  userId      Int @map("user_id") @unique
  total       Float
  status      String   @default("pending")
  products    ProductInCart[]
  createAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")
  @@map("cart")
}
model ProductInCart {
  id         Int      @id @default(autoincrement())
  cartId     Int
  quantity   Int
  price      Float
  product    Product?  @relation(fields: [productId], references: [id],onDelete: SetNull,onUpdate: Cascade)
  productId  Int?      @map("product_id")
  cart       Cart     @relation(fields: [cartId], references: [id])
  createAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")
  @@map("product_in_cart")
}
enum Role {
  CLIENT
  MANAGER
}
