import { Prisma } from '@prisma/client';
//Middleware that handles errors generated by the boom library.
export function boomErrorHandler(err, req, res, next) {
    if (err.isBoom) {
        var output = err.output;
        res.status(output.statusCode).json(output.payload);
    }
    next(err);
}
//Middleware that handles errors generated by Prisma.
export function ormErrorHandler(err, req, res, next) {
    if (err instanceof Prisma.PrismaClientKnownRequestError) {
        if (err.code === 'P2002') {
            res.status(409).json({
                statusCode: 409,
                error: 'Conflict',
                message: 'Email already registered, please login.',
            });
        }
        else
            res.json(err);
    }
}
//Middleware that handles errors and sends a response with the error message.
export function errorHandler(err, req, res, next) {
    res.status(err.statusCode || 500).json({ message: err });
    next();
}
//# sourceMappingURL=error.handler.js.map